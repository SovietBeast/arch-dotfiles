# A valid snippet should starts with:
#
#		snippet trigger_word [ "description" [ options ] ]
#
# and end with:
#
#		endsnippet
#
# Snippet options:
#
#		b - Beginning of line.
#		i - In-word expansion.
#		w - Word boundary.
#		r - Regular expression
#		e - Custom context snippet
#		A - Snippet will be triggered automatically, when condition matches.
#
# Basic example:
#
#		snippet emitter "emitter properties" b
#		private readonly ${1} = new Emitter<$2>()
#		public readonly ${1/^_(.*)/$1/}: Event<$2> = this.$1.event
#		endsnippet
#
# Online reference: https://github.com/SirVer/ultisnips/blob/master/doc/UltiSnips.txt

#global !p
#def math():
#	return vim.eval('vimtex#syntax#in_mathzone()') == '1'
#def comment(): 
#	return vim.eval('vimtex#syntax#in_comment()') == '1'
#def env(name):
#	[x,y] = vim.eval("vimtex#env#is_inside('" + name + "')") 
#	return x != '0' and y != '0'
#endglobal


snippet beg "begin{} end{}" b
\\begin{$1}
	$0
\\end{$1}
endsnippet

snippet ... "ldots" iA
\\ldots
endsnippet

snippet mk "Math" wA
$${1}$`!p
if t[2] and t[2][0] not in [',', '.', '?', '-', ' ']:
	snip.rv = ' '
else:
	snip.rv = ''
`$2
endsnippet

snippet dm "Math" wA
\[
${1:${VISUAL}}
.\] $0
endsnippet

#context "math()"
snippet // "Fraction" iA
\\frac{$1:${VISUAL}}{$2}$0
endsnippet

snippet ss "potega" iw
^{$1}$0
endsnippet

snippet __ "indeks dolny" Aiw
_{$1}$0
endsnippet

snippet sqrt "pierwiastek" wi
\sqrt{${$1:${VISUAL}}}$0
endsnippet

snippet bf "Bold" wi
\bf{${1:${VISUAL}}}$0
endsnippet

snippet it "Italic" wi
\it{${1:${VISUAL}}}$0
endsnippet

snippet un "Underline" wi
\un{${1:${VISUAL}}}$0
endsnippet
